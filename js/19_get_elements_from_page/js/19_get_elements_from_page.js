'use strict';
/* 
НАУЧИМСЯ ПОЛУЧАТЬ СО СТРАНИЦЫ НУЖНЫЕ ЭЛЕМЕНТЫ И ПРОВОДИТЬ ОПЕРАЦИИ С НИМИ

DOM - document object model, объектная модель документа, это наша html страница. Ведь она является по сути обычным документом со своей структурой, как ворд страница.
Объектная модель документа рредставлена в виде узлов, отношений между собой, родитель - потомок. Как например у родительского элемента body есть много дочерних элементов, например div'ы. То есть разбрались, наша HTML страница это объект, и как у любого объекта у него есть свои методы, с помощью этих методов мы и сможем взаимодействовать с элементами на странице. Чтобы обратиться к DOM надо написать слово document
 */

let box_1 = document.getElementById('box'); /* Старое обращение к элементам с ID */


/* Если будет использоваться поиск по тегам, напримет button, а таких может быть много на странице, мы получим псевдомассив, напомним что псевдомассив это визуально то же что и массив, но без каких-либо методов */

let btns = document.getElementsByTagName('button'); /* Сейчас сюда мы получили ни один какой-то элемент button, а псевдомассив
со всеми кнопками на странице. То есть HTML-коллекцию Чтобы получить конкретную кнопку на странице, мы должны указать индекс элемента
*/

console.log(btns); // HTMLCollection(5) [button, button, button, button, button] 
let btns_2 = document.getElementsByTagName('button')[1];

console.log(btns_2); /*  <button style="background-color: red; width: 1000px;">2</button> 
Получаем только вторую кнопку на странице */

let circles = document.getElementsByClassName('circle'); /* Получаем все элементы с классом circle по имени класса, и опять же получаем HTML-коллекцию, обращаем внимаение на слово Elements, то есть множественное число */

/* Переходим к более функциональным и современным методам поиска элементов на странице */

let hearts = document.querySelectorAll('.heart');

console.log(hearts);

/* Сюда, во внутрь круглых скобок мы можем положить все что угодно, и классы, вложенность классов, атрибуты классов, комбинаторы классов, а также и id, и теги и что угодно. То есть любой CSS селектор. Но перед названием селектора надо не забывать ставить его "фишку", для классов точки, для id решетки и так далее
У querySelectorAll есть одна суперспособность, у него есть в отличии от других методов всего один, зато какой!
Этот метод forEach
*/

hearts.forEach(function (item) {
    console.log(item);
});
// Таким образом мы выведем все три элемента с классом heart в консоль

let oneHeart = document.querySelector('.heart'); /* 
Этот метод точно также получает любые CSS селекторы. Только таким образом мы получаем только 1ый элемент со страницы с классом heart    */

