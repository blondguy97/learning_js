'use strict';

// Методы это вспомогательные функции, а свойства это вспомогательные значения. Свойства пишутся просто через точку, без круглых скобок, а методы пишутся уже со скобками, так как это функции которые вызываются

const str = 'test';


console.log(str.length); // length это очень часто используемое свойство которое используется у строк чтобы узнать их длину, а также у других типов данных, например чтобы узнать длину массива.

const arr = [1, 2, 4];

console.log(arr.length); // 3. Свойством length мы узнали сколько элементов содержится в массиве arr


// Все свойства и методы объектов запомянать не обязательно, можно всегда воспользоваться справочником или же даже просто бразуером. Есть команда 

console.dir(Number); // В скобках передается какой-то тип данных и в консоли он выводится в виде объекта, со своими методами и свойствами

// У строк также есть свои методы, а свойство только одно, мы уже упомянали, это length для того чтобы мы узнали длинну строки


let str_2 = 'hello';

console.log(str_2.toUpperCase()); // HELLO. Метод выдает нам просто новое значение, напрямую оно не изменяет строку, можно в этом убедиться ниже, там старое значение переменной str_2. То есть исходник остается прежним
console.log(str_2.toLowerCase()); // hello. То же самое, str_2 и была нижним регистром

console.log(str_2); // hello
let fruit = 'Some fruit';

console.log(fruit.indexOf('fruit')); // indexOf это поиск подстроки, в этот метод мы передаем то что хотим найти в строке и понять с какого индекса он начинается, (или же получается что-то типо условия, а есть в ли в нашей строке те или иные символы) в нашем случае с 5ого, пробел также счиатется символом, к тому же индексы начинаются с нуля. 


let logg = 'hello world!';

console.log(logg.slice(6, 11)); // Методом slice мы нарезаем строки, вырезаем нужную нам часть. Первой цифрой в методе мы пишем ту с которой слово начинается, слово world начинается с 6ой буквы, а последней цифрой мы пишем уже то что НЕ ВКЛЮЧАЕТСЯ в строку, 11ый символ тут это воскл. знак, но мы все равно его пишем, потому что он не включается в нужное нам слово. (в этом методе нельзя задават первый аргумент больше чем второй) Можно же ограничится одной цифрой в методе, то есть с чего начать, а дальше автоматом вырежется все остальное. То есть тут можно написать просто цифру 6 и выйдет кусок строки 'world!;  Внимание, в этом методе можно использовать отрицатебные значения, но не рекомендуется, так как это немного странно.


console.log(logg.substring(6, 11)); // Почти то же самое что и метод slice, только здесь можно исопльзовать первый метод больше чем второй, а также нельзя использовать отрицательные значения.


console.log(logg.substr(6, 5)); // В этом методе принцип такой же, только отличие в том, что первым индексом мы указываем с какого символа нам начинать, а вторым сколько символом захватить, если что это уже устаревший метод. Вон даже перечеркивается.




// Методы для работы с числами

let num = 12.2;

console.log(Math.round(num)); // 12. С помощью этого метода число округляется до ближайшего целого


const test = '12.9px';

console.log(parseInt(test)); // Переводит в другую систему исчисления. Переводим в числовой тип данных и округляем до целого. В нашем случае до 12ти, ьез дробных значений

console.log(parseFloat(test)); // Здесь наоборот этот метод оставляет дробные значения и так же переводит в числовой тип данных